@using NetDuino.Models;
@model NetDuino.Models.ArduinoViewModel

@{
    ViewBag.Title = "Arduino";
}


<div id="display-container" dashboardId="@Model.Arduino.Id">
    <div class="grid-stack grid-stack-24">
        @foreach (var item in Model.Arduino.Components)
        {
            <div class="grid-stack-item"
                 data-gs-x="@item.PositionX" data-gs-y="@item.PositionY"
                 data-gs-width="@item.Width" data-gs-height="@item.Height"
                 data-component-id="@item.Id">
                <div class="grid-stack-item-content">
                    @Html.Action("GetComponentView", "Component", new { component = item })
                </div>
            </div>
        }
    </div>
    <aside class="component-menu">
        @Html.Action("GetComponentMenu", new { Id = Model.Arduino.Id })
    </aside>
</div>
<script src="~/Scripts/Charts.js"></script>

@section scripts
{
    <script defer>
        $(function () {
            var options = {
                cellHeight: 'auto',
                verticalMargin: 10,
                float: true,
                width: 24,
                height: 10,
                amimate: true
            };
            $('.grid-stack').gridstack(options);
            $('.grid-stack').on('change', function (event, items) {
                var grid = this;
                var element = items[0];
                var data = {
                    "arduinoId" : @Model.Arduino.Id,
                    "posX" : element.x,
                    "posY" : element.y,
                    "height" : element.height,
                    "width" : element.width,
                    "elementId" : element.el[0].getAttribute("data-component-id")
                }
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdatePosition")',
                    data: JSON.stringify(data),
                    contentType: 'application/json'
                });
            });
        });
    </script>
}